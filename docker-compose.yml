version: '3.8'

services:
  nestjs:
    container_name: ${PROJECT_NAME}_nestjs
    image: node:17.9-alpine3.14
    working_dir: /usr/src/app
    command: tail -f /dev/null
    environment:
      - NESTJS_APPLICATION_PORT=${NESTJS_APPLICATION_PORT}
      - EDGE_USER=${EDGE_USER}
      - EDGE_PASSWORD=${EDGE_PASSWORD}
      - EDGE_HOST=${EDGE_HOST}
      - EDGE_PORT=${EDGE_PORT}
      - EDGE_DB=${EDGE_DB}
      - ALLOWED_CORS_SUBDOMAINS=${NESTJS_ALLOWED_CORS_SUBDOMAINS}
    depends_on:
      - edgedb
    ports:
      - ${NESTJS_APPLICATION_PORT}:${NESTJS_APPLICATION_PORT}
      - ${NESTJS_DEBUGGING_PORT}:${NESTJS_DEBUGGING_PORT}
    volumes:
      - ./server:/usr/src/app/
      - .docker/startNestJSServer.sh:/usr/src/startNestJSServer.sh
    labels:
      - traefik.http.routers.nestjs.rule=Host(`${NESTJS_HOST}`)
      - traefik.http.services.nestjs.loadbalancer.server.port=${NESTJS_APPLICATION_PORT}
  edgedb:
    container_name: ${PROJECT_NAME}_edgedb
    image: edgedb/edgedb
    hostname: ${EDGE_HOST}
    environment:
      - EDGEDB_SERVER_SECURITY=insecure_dev_mode
#      - EDGEDB_SERVER_TLS_CERT_MODE=generate_self_signed
      - EDGEDB_SERVER_USER=${EDGE_USER}
      - EDGEDB_SERVER_PASSWORD=${EDGE_PASSWORD}
      - EDGEDB_SERVER_DATABASEâ€‹=${EDGE_DB}
    ports:
      - ${EDGE_PORT}:${EDGE_PORT} 
    volumes:
      - ./server/dbschema:/dbschema
      - ./server/edgedb.toml:/edgedb.toml
      - ./server/credentials:/root/.config/edgedb/credentials
  react:
    container_name: ${PROJECT_NAME}_react
    image: node:17.9-alpine3.14
    working_dir: /usr/src/app
    command: tail -f /dev/null
    environment:
      - PORT=${REACT_PORT}
      - REACT_APP_NESTJS_BASE_URL=${NESTJS_HOST_PROTOCOL}://${NESTJS_HOST}
      - REACT_APP_NESTJS_EDGEQL_QUERY_ENDPOINT=${NESTJS_EDGEQL_QUERY_ENDPOINT}
    depends_on:
      - nestjs
    ports:
      - ${REACT_PORT}:${REACT_PORT}
    volumes:
      - ./client:/usr/src/app/
      - .docker/startReactServer.sh:/usr/src/startReactServer.sh
    labels:
      - traefik.http.routers.react.rule=Host(`${REACT_HOST}`)
      - traefik.http.services.react.loadbalancer.server.port=${REACT_PORT}
  reverse-proxy:
    container_name: ${PROJECT_NAME}_reverse-proxy
    image: traefik:v2.6
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
#      - 8080:8080 Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
  # prod:
  #   container_name: ${PROJECT_NAME}_nestjs-prod
  #   image: nestjs-api-prod:1.0.0
  #   build:
  #     context: .
  #     target: production
  #     dockerfile: ./Dockerfile
  #   command: npm run start:prod
  #   ports:
  #     - ${APPLICATION_PORT}:${APPLICATION_PORT}
  #     - ${DEBUGGING_PORT}:${DEBUGGING_PORT}
  #   networks:
  #     - nesjs-network
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: unless-stopped